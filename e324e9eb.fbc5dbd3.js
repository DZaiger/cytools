(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{78:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return c}));var n=a(2),i=a(6),r=(a(0),a(84)),s={id:"other",title:"Miscellaneous Functions",sidebar_label:"Misc Functions"},b={unversionedId:"documentation/other",id:"documentation/other",isDocsHomePage:!1,title:"Miscellaneous Functions",description:"<link",source:"@site/docs/documentation/other.md",slug:"/documentation/other",permalink:"/docs/documentation/other",version:"current",sidebar_label:"Misc Functions",sidebar:"docs",previous:{title:"Cone Class",permalink:"/docs/documentation/cone"},next:{title:"Configuration",permalink:"/docs/documentation/config"}},l=[{value:"Functions in <code>cytools.cone</code>",id:"functions-in-cytoolscone",children:[{value:"<code>is_extremal</code>",id:"is_extremal",children:[]}]},{value:"Functions in <code>cytools.triangulation</code>",id:"functions-in-cytoolstriangulation",children:[{value:"<code>all_triangulations</code>",id:"all_triangulations",children:[]},{value:"<code>cgal_triangulate</code>",id:"cgal_triangulate",children:[]},{value:"<code>convert_to_star</code>",id:"convert_to_star",children:[]},{value:"<code>random_triangulations_fair_generator</code>",id:"random_triangulations_fair_generator",children:[]},{value:"<code>random_triangulations_fast_generator</code>",id:"random_triangulations_fast_generator",children:[]},{value:"<code>topcom_triangulate</code>",id:"topcom_triangulate",children:[]},{value:"<code>qhull_triangulate</code>",id:"qhull_triangulate",children:[]}]},{value:"Functions in <code>cytools.utils</code>",id:"functions-in-cytoolsutils",children:[{value:"<code>array_float_to_fmpq</code>",id:"array_float_to_fmpq",children:[]},{value:"<code>array_fmpq_to_float</code>",id:"array_fmpq_to_float",children:[]},{value:"<code>array_fmpz_to_int</code>",id:"array_fmpz_to_int",children:[]},{value:"<code>array_int_to_fmpz</code>",id:"array_int_to_fmpz",children:[]},{value:"<code>fetch_polytopes</code>",id:"fetch_polytopes",children:[]},{value:"<code>filter_tensor_indices</code>",id:"filter_tensor_indices",children:[]},{value:"<code>float_to_fmpq</code>",id:"float_to_fmpq",children:[]},{value:"<code>fmpq_to_float</code>",id:"fmpq_to_float",children:[]},{value:"<code>gcd_float</code>",id:"gcd_float",children:[]},{value:"<code>gcd_list</code>",id:"gcd_list",children:[]},{value:"<code>polytope_generator</code>",id:"polytope_generator",children:[]},{value:"<code>read_polytopes</code>",id:"read_polytopes",children:[]},{value:"<code>solve_linear_system</code>",id:"solve_linear_system",children:[]},{value:"<code>symmetric_sparse_to_dense_in_basis</code>",id:"symmetric_sparse_to_dense_in_basis",children:[]},{value:"<code>to_sparse</code>",id:"to_sparse",children:[]}]}],o={rightToc:l};function c(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("link",{rel:"stylesheet",href:"https://cdn.jsdelivr.net/npm/katex@0.11.0/dist/katex.min.css",integrity:"sha384-BdGj8xC2eZkQaxoQ8nSLefg4AV4/AwB3Fj+8SUSo7pnKP6Eoy18liIKTPn9oBYNG",crossOrigin:"anonymous"}),Object(r.b)("h2",{id:"functions-in-cytoolscone"},"Functions in ",Object(r.b)("inlineCode",{parentName:"h2"},"cytools.cone")),Object(r.b)("h3",{id:"is_extremal"},Object(r.b)("inlineCode",{parentName:"h3"},"is_extremal")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nAuxiliary function that is used to find the extremal rays of cones. Returns\nTrue if the ray is extremal and False otherwise. It has additional\nparameters that are used when parallelizing."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"A")," (list): A matrix where the columns are rays (excluding b)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"b")," (list): The vector that will be checked if it can be expressed as\na positive linear combination of the columns of A."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"i")," (integer, optional): An id number that is used when\nparallelizing."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"q")," (Queue, optional): A queue that is used when parallelizing."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"tol")," (float, optional, default=1e-4): The tolerance for determining\nwhether a ray is extremal.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(boolean or None) The truth value of the ray baing extremal. If the process\nfails then it returns nothing."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"functions-in-cytoolstriangulation"},"Functions in ",Object(r.b)("inlineCode",{parentName:"h2"},"cytools.triangulation")),Object(r.b)("h3",{id:"all_triangulations"},Object(r.b)("inlineCode",{parentName:"h3"},"all_triangulations")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nComputes all triangulations of the input point configuration using TOPCOM.\nThere is the option to only compute fire, regular or fine triangulations."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This function is not intended to be called by the end user. Instead, it is\nused by the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./polytope#all_triangulations"}),"all_triangulations")," function of\nthe ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./polytope"}),"Polytope")," class."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"points")," (list): The list of points to be triangulated."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"only_fine")," (boolean, optional, default=False): Restricts to fine\ntriangulations."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"only_regular")," (boolean, optional, default=False): Restricts to\nregular triangulations."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"only_star")," (boolean, optional, default=False): Restricts to star\ntriangulations."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"star_origin")," (int, optional): The index of the point used as the\nstar origin. It needs to be specified if only_star=True."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"backend")," (string, optional): The optimizer used to check\nregularity computation. The available options are the backends of the\n",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"./cone#is_solid"}),Object(r.b)("inlineCode",{parentName:"a"},"is_solid"))," function of the\n",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"./cone"}),Object(r.b)("inlineCode",{parentName:"a"},"Cone"))," class. If not specified, it will be picked\nautomatically. Note that TOPCOM is not used to check regularity since\nit is slower."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"poly")," (Polytope, optional): The ambient polytope. It is constructed\nif not specified.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(generator) a generator of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./triangulation"}),"Triangulation")," objects with\nthe specified properties."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"cgal_triangulate"},Object(r.b)("inlineCode",{parentName:"h3"},"cgal_triangulate")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nComputes a regular triangulation using CGAL."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This function is not intended to be called by the end user. Instead, it is\nused by the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./triangulation"}),"Triangulation")," class when using CGAL as the\nbackend."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"points")," (list): A list of points."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"heights")," (list): A list of heights defining the regular\ntriangulation.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(list) A list of simplices defining a regular triangulation."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"convert_to_star"},Object(r.b)("inlineCode",{parentName:"h3"},"convert_to_star")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nTurns a triangulation into a star triangulation by deleting internal lines\nand connecting all points to the origin."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This function is not intended to be called by the end user. Instead, it is\nused by the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./triangulation"}),"Triangulation")," class when needed."))),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This function is only reliable for triangulations of reflexive polytopes\nand may produce invalid tiangulations for other polytopes."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"simplices")," (list): The list of simplices of the triangulation. Each\nsimplex consists of the list of indices of the points forming its\nvertices."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"facets")," (list): The list of facets of the polytope. Each facet\nconsists of the indices of the points in the facet."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"star_origin")," (integer): The index of the point that is used as the\nstar origin.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(list) A list of simplices forming a star triangulation."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"random_triangulations_fair_generator"},Object(r.b)("inlineCode",{parentName:"h3"},"random_triangulations_fair_generator")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nReturns a pseudorandom list of regular triangulations of a given point set.\nImplements Algorithm ","#","3 from the paper\n",Object(r.b)("em",{parentName:"p"},"Bounding the Kreuzer-Skarke Landscape"),"\nby Mehmet Demirtas, Liam McAllister, and Andres Rios-Tascon.\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://arxiv.org/abs/2008.01730"}),"arXiv:2008.01730")),Object(r.b)("p",null,"This is a Markov chain Monte Carlo algorithm that involves taking random\nwalks inside the subset of the secondary fan corresponding to fine\ntriangulations and performing random flips. For details, please see\nSection 4.1 in the paper."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"notes")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"This function is not intended to be called by the end user. Instead, it\nis used by the\n",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"./polytope#random_triangulations_fast"}),"random_triangulations_fast"),"\nfunction of the ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"./polytope"}),"Polytope")," class."),Object(r.b)("li",{parentName:"ul"},"This function is designed mainly for large polytopes where sampling\ntriangulations is challenging. When small polytopes are used it is likely\nto get stuck.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"triang_pts")," (list): The list of points to be triangulated."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"N")," (integer, optional): Number of desired unique triangulations. If\nnot specified, it will generate as many triangulations as it can find\nuntil it has to retry more than max_retries times to obtain a new\ntriangulation."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"n_walk")," (integer, optional, default=10): Number of hit-and-run steps\nper triangulation."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"n_flip")," (integer, optional, default=10): Number of random flips\nperformed per triangulation."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"initial_walk_steps")," (integer, optional, default=20): Number of\nhit-and-run steps to take before starting to record triangulations. Small\nvalues may result in a bias towards Delaunay-like triangulations."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"walk_step_size")," (float, optional, default=1e-2): Determines size of\nrandom steps taken in the secondary fan. Algorithm may stall if too\nsmall."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"max_steps_to_wall")," (integer, optional, default=10): Maximum number\nof steps to take towards a wall of the subset of the secondary fan that\ncorrespond to fine triangulations. If a wall is not found, a new random\ndirection is selected. Setting this to be very large (>100) reduces\nperformance. If this, or walk_step_size, is set to be too low, the\nalgorithm may stall."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"fine_tune_steps")," (integer, optional, default=8): Number of steps to\ndetermine the location of a wall. Decreasing improves performance, but\nmight result in biased samples."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"max_retries")," (integer, optional, default=50): Maximum number of\nattempts to obtain a new triangulation before the process is terminated."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"make_star")," (boolean, optional, default=False): Converts the obtained\ntriangulations into star triangulations."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"backend"),' (string, optional, default="cgal"): Specifies the\nbackend used to compute the triangulation. The available options are\n"cgal" and "qhull".')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(generator) A generator of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./triangulation"}),Object(r.b)("inlineCode",{parentName:"a"},"Triangulation"))," objects\nwith the specified properties."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"random_triangulations_fast_generator"},Object(r.b)("inlineCode",{parentName:"h3"},"random_triangulations_fast_generator")),Object(r.b)("p",null,"Constructs pseudorandom regular (optionally fine and star) triangulations\nof a given point set. This is done by picking random heights around the\nDelaunay heights from a Gaussian distribution."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This function is not intended to be called by the end user. Instead, it is\nused by the\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./polytope#random_triangulations_fast"}),"random_triangulations_fast"),"\nfunction of the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./polytope"}),"Polytope")," class."))),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"important")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This function produces random triangulations very quickly, but it does not\nproduce a fair sample. When a fair sampling is required the\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./polytope#random_triangulations_fair"}),"random_triangulations_fair"),"\nfunction should be used."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"triang_pts")," (list): The list of points to be triangulated."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"N")," (integer, optional): Number of desired unique triangulations. If\nnot specified, it will generate as many triangulations as it can find\nuntil it has to retry more than max_retries times to obtain a new\ntriangulation."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"c")," (float, optional, default=0.2): A contant used as the standard\ndeviation of the Gaussian distribution used to pick the heights. A\nlarger c results in a wider range of possible triangulations, but with a\nlarger fraction of them being non-fine, which slows down the process when\nusing only_fine=True."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"max_retries")," (integer, optional, default=50): Maximum number of\nattempts to obtain a new triangulation before the process is terminated."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"make_star")," (boolean, optional, default=False): Converts the obtained\ntriangulations into star triangulations."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"only_fine")," (boolean, optional, default=True): Restricts to fine\ntriangulations."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"backend"),' (string, optional, default="cgal"): Specifies the\nbackend used to compute the triangulation. The available options are\n"cgal" and "qhull".')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(generator) A generator of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./triangulation"}),Object(r.b)("inlineCode",{parentName:"a"},"Triangulation"))," objects\nwith the specified properties."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"topcom_triangulate"},Object(r.b)("inlineCode",{parentName:"h3"},"topcom_triangulate")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nComputes the placing/pushing triangulation using TOPCOM."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This function is not intended to be called by the end user. Instead, it is\nused by the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./triangulation"}),"Triangulation")," class when using TOPCOM as the\nbackend."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"points")," (list): A list of points.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(list) A list of simplices defining a triangulation."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"qhull_triangulate"},Object(r.b)("inlineCode",{parentName:"h3"},"qhull_triangulate")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nComputes a regular triangulation using QHull."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This function is not intended to be called by the end user. Instead, it is\nused by the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./triangulation"}),"Triangulation")," class when using QHull as the\nbackend."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"points")," (list): A list of points."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"heights")," (list): A list of heights defining the regular\ntriangulation.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(list) A list of simplices defining a regular triangulation."),Object(r.b)("hr",null),Object(r.b)("h2",{id:"functions-in-cytoolsutils"},"Functions in ",Object(r.b)("inlineCode",{parentName:"h2"},"cytools.utils")),Object(r.b)("h3",{id:"array_float_to_fmpq"},Object(r.b)("inlineCode",{parentName:"h3"},"array_float_to_fmpq")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nConverts a numpy array with floating-point entries to fmpq entries."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"arr")," (list): A numpy array with floating-point entries.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\nA numpy array with fmpq entries."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"array_fmpq_to_float"},Object(r.b)("inlineCode",{parentName:"h3"},"array_fmpq_to_float")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nConverts a numpy array with fmpq entries to floating-point entries."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"arr")," (list): A numpy array with fmpq entries.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\nA numpy array with floating-point entries."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"array_fmpz_to_int"},Object(r.b)("inlineCode",{parentName:"h3"},"array_fmpz_to_int")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nConverts a numpy array with fmpz entries to 64-bit integer entries."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"arr")," (list): A numpy array with fmpz entries.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\nA numpy array with 64-bit integer entries."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"array_int_to_fmpz"},Object(r.b)("inlineCode",{parentName:"h3"},"array_int_to_fmpz")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nConverts a numpy array with 64-bit integer entries to fmpz entries."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"arr")," (list): A numpy array with 64-bit integer entries.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\nA numpy array with fmpz entries."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"fetch_polytopes"},Object(r.b)("inlineCode",{parentName:"h3"},"fetch_polytopes")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nFetch reflexive polytopes from the Kreuzer-Skarke database or from the\nSch\xf6ller-Skarke database. The data is fetched from websites\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"http://hep.itp.tuwien.ac.at/~kreuzer/CY/"}),"http://hep.itp.tuwien.ac.at/~kreuzer/CY/")," and\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"http://rgc.itp.tuwien.ac.at/fourfolds/"}),"http://rgc.itp.tuwien.ac.at/fourfolds/")," respectively."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"h11")," (integer, optional): Specifies the Hodge number ",Object(r.b)("span",Object(n.a)({parentName:"li"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("msup",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msup"},"h"),Object(r.b)("mrow",{parentName:"msup"},Object(r.b)("mn",{parentName:"mrow"},"1"),Object(r.b)("mo",Object(n.a)({parentName:"mrow"},{separator:"true"}),","),Object(r.b)("mn",{parentName:"mrow"},"1")))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"h^{1,1}")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"h"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.8141079999999999em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"1"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mpunct mtight"}),","),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"1")))))))))))))," of\nthe Calabi-Yau hypersurface."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"h12")," (integer, optional): Specifies the Hodge number ",Object(r.b)("span",Object(n.a)({parentName:"li"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("msup",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msup"},"h"),Object(r.b)("mrow",{parentName:"msup"},Object(r.b)("mn",{parentName:"mrow"},"1"),Object(r.b)("mo",Object(n.a)({parentName:"mrow"},{separator:"true"}),","),Object(r.b)("mn",{parentName:"mrow"},"2")))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"h^{1,2}")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"h"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.8141079999999999em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"1"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mpunct mtight"}),","),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"2")))))))))))))," of\nthe Calabi-Yau hypersurface."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"h13")," (integer, optional): Specifies the Hodge number ",Object(r.b)("span",Object(n.a)({parentName:"li"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("msup",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msup"},"h"),Object(r.b)("mrow",{parentName:"msup"},Object(r.b)("mn",{parentName:"mrow"},"1"),Object(r.b)("mo",Object(n.a)({parentName:"mrow"},{separator:"true"}),","),Object(r.b)("mn",{parentName:"mrow"},"3")))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"h^{1,3}")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"h"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.8141079999999999em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"1"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mpunct mtight"}),","),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"3")))))))))))))," of\nthe Calabi-Yau hypersurface."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"h21")," (integer, optional): Specifies the Hodge number ",Object(r.b)("span",Object(n.a)({parentName:"li"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("msup",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msup"},"h"),Object(r.b)("mrow",{parentName:"msup"},Object(r.b)("mn",{parentName:"mrow"},"2"),Object(r.b)("mo",Object(n.a)({parentName:"mrow"},{separator:"true"}),","),Object(r.b)("mn",{parentName:"mrow"},"1")))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"h^{2,1}")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"h"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.8141079999999999em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"2"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mpunct mtight"}),","),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"1")))))))))))))," of\nthe Calabi-Yau hypersurface. This is equivalent to the h12 parameter."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"h22")," (integer, optional): Specifies the Hodge number ",Object(r.b)("span",Object(n.a)({parentName:"li"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("msup",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msup"},"h"),Object(r.b)("mrow",{parentName:"msup"},Object(r.b)("mn",{parentName:"mrow"},"2"),Object(r.b)("mo",Object(n.a)({parentName:"mrow"},{separator:"true"}),","),Object(r.b)("mn",{parentName:"mrow"},"2")))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"h^{2,2}")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"h"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.8141079999999999em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"2"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mpunct mtight"}),","),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"2")))))))))))))," of\nthe Calabi-Yau hypersurface."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"h31")," (integer, optional): Specifies the Hodge number ",Object(r.b)("span",Object(n.a)({parentName:"li"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("msup",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msup"},"h"),Object(r.b)("mrow",{parentName:"msup"},Object(r.b)("mn",{parentName:"mrow"},"3"),Object(r.b)("mo",Object(n.a)({parentName:"mrow"},{separator:"true"}),","),Object(r.b)("mn",{parentName:"mrow"},"1")))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"h^{3,1}")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.8141079999999999em",verticalAlign:"0em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"h"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.8141079999999999em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-3.063em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"3"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mpunct mtight"}),","),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"1")))))))))))))," of\nthe Calabi-Yau hypersurface. This is equivalent to the h13 parameter."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"chi")," (integer, optional): Specifies the Euler characteristic of the\nCalabi-Yau hypersurface."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"lattice")," (string, optional): Specifies the lattice on which the\npolytope is defined. Options are 'N' and 'M'. Has to be specified if the\nHodge numbers or the Euler characteristic is specified."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"dim")," (integer, optional, default=4): The dimension of the polytope.\nThe only available options are 4 and 5."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"n_points")," (integer, optional): Specifies the number of lattice\npoints of the desired polytopes."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"n_vertices")," (integer, optional): Specifies the number of vertices of\nthe desired polytopes."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"n_dual_points")," (integer, optional): Specifies the number of points\nof the dual polytopes of the desired polytopes."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"n_facets")," (integer, optional): Specifies the number of facets of the\ndesired polytopes."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"limit")," (integer, optional, default=1000): Specifies the maximum\nnumber of fetched polytopes."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"timeout")," (integer, optional, default=60): Specifies the maximum\nnumber of seconds to wait for the server to return the data."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"dualize")," (boolean, optional, default=False): Flag that indicates\nwhether to dualize all the polytopes before returning them."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"as_list")," (boolean, optional, default=False): Return the list of\npolytopes instead of a generator.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(generator or list) A generator of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./polytope"}),Object(r.b)("inlineCode",{parentName:"a"},"Polytope"))," objects, or\nthe full list when as_list=True."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"filter_tensor_indices"},Object(r.b)("inlineCode",{parentName:"h3"},"filter_tensor_indices")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nSelects a specific subset of indices from a tensor. The tensor is\nreindexed so that indices are in the range 0..len(indices) with the\nordering specified by the input indices. This function can be used to\nconvert the tensor of intersection numbers to a given basis."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"tensor")," (list): The input symmetric sparse tensor of the form\n[","[a,b,...,c,M_ab...c]","]."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"indices")," (list): The list of indices that will be preserved.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(list) A matrix describing a tensor in the same format as the input, but\nonly with the desired indices."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"float_to_fmpq"},Object(r.b)("inlineCode",{parentName:"h3"},"float_to_fmpq")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nConverts a float to an fmpq."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"c")," (float): The input number.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(fmpq) The rational number that most reasonably approximates the input."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"fmpq_to_float"},Object(r.b)("inlineCode",{parentName:"h3"},"fmpq_to_float")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nConverts an fmpq to a float."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"c")," (fmpq): The input number.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(float) The input number as a float."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gcd_float"},Object(r.b)("inlineCode",{parentName:"h3"},"gcd_float")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nCompute the greatest common (floating-point) divisor of a and b."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"a")," (float): The first number."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"b")," (float): The second number."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"tol")," (float, optional, default=1e-5): The tolerance for rounding.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(float) The gcd of a and b."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gcd_list"},Object(r.b)("inlineCode",{parentName:"h3"},"gcd_list")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nCompute the greatest common divisor of the elements in an array."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"arr")," (list): A list of floating-point numbers.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(float) The gcd of all the elements in the input list."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"polytope_generator"},Object(r.b)("inlineCode",{parentName:"h3"},"polytope_generator")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nReads the polytopes from a file or a string containing a list of polytopes\nin the format used in the Kreuzer-Skarke database, or a list of weight\nsystems."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"input")," (string): Specifies the name of the file to read or the\nstring containing the polytopes."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"input_type"),' (string, optional, default="file"): Specifies whether to\nread from a file or from the input string.  Options are "file" or\n"string".'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"format"),' (string, optional, default="ks"): Specifies the format to\nread. The options are "ks", which is the format used in the KS database,\nand "ws", if the polytopes should be constructed from weight systems.'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"backend")," (string, optional): A string that specifies the backend\nused for the ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"./polytope"}),Object(r.b)("inlineCode",{parentName:"a"},"Polytope"))," class."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"dualize")," (boolean, optional, default=False): Flag that indicates\nwhether to dualize all the polytopes before returning them.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(generator) A generator of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./polytope"}),Object(r.b)("inlineCode",{parentName:"a"},"Polytope"))," objects."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"read_polytopes"},Object(r.b)("inlineCode",{parentName:"h3"},"read_polytopes")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nReads the polytopes from a file or a string containing a list of polytopes\nin the format used in the Kreuzer-Skarke database, or a list of weight\nsystems."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"input")," (string): Specifies the name of the file to read or the\nstring containing the polytopes."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"input_type"),' (string, optional, default="file"): Specifies whether to\nread from a file or from the input string.  Options are "file" or\n"string".'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"format"),' (string, optional, default="ks"): Specifies the format to\nread. The options are "ks", which is the format used in the KS database,\nand "ws", if the polytopes should be constructed from weight systems.'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"backend")," (string, optional): A string that specifies the backend\nused for the ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"./polytope"}),Object(r.b)("inlineCode",{parentName:"a"},"Polytope"))," class."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"dualize")," (boolean, optional, default=False): Flag that indicates\nwhether to dualize all the polytopes before returning them."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"as_list")," (boolean, optional, default=False): Return the list of\npolytopes instead of a generator.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(generator or list) A generator of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"./polytope"}),Object(r.b)("inlineCode",{parentName:"a"},"Polytope"))," objects, or\nthe full list when setting as_list=True."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"solve_linear_system"},Object(r.b)("inlineCode",{parentName:"h3"},"solve_linear_system")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nSolves the sparse linear system M*x=C."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"M")," (dok_matrix): A scipy dok_matrix."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"C")," (list): A vector of floats."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"backend"),' (string, optional, default="all"): The sparse linear solver\nto use. Options are "all", "sksparse" and "scipy". When set to "all" it\ntries all available backends.'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"check")," (boolean, optional, default=True): Whether to explicitly\ncheck the solution to the linear system."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"backend_error_tol")," (float, optional, default=1e-4): Error tolerance\nfor the solution of the linear system."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"verbose")," (integer, optional, default=0): The verbosity level.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"verbose = 0: Do not print anything."),Object(r.b)("li",{parentName:"ul"},"verbose = 1: Print warnings when backends fail.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(list) Floating-point solution to the linear system."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"symmetric_sparse_to_dense_in_basis"},Object(r.b)("inlineCode",{parentName:"h3"},"symmetric_sparse_to_dense_in_basis")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nConverts a symmetric sparse tensor of the form [","[a,...,b,M_a...b]","] to a\ndense tensor and then applies the basis transformation."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"tensor")," (list): A sparse tensor of the form [","[a,...,b,M_a...b]","]."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"basis")," (list): A matrix where the rows are the basis elements.")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(list) A dense tensor in the chosen basis."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"to_sparse"},Object(r.b)("inlineCode",{parentName:"h3"},"to_sparse")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Description:"),"\nConverts an matrix of the form [","[a,b, M_ab]",",...] to a dok_matrix."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Arguments:")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"rule_arr_in")," (list): A list of the form [","[a,b, M_ab]",",...].")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:"),"\n(dok_matrix) The sparse dok_matrix."))}c.isMDXComponent=!0},84:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return j}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=i.a.createContext({}),c=function(e){var t=i.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},p=function(e){var t=c(e.components);return i.a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},O=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),p=c(a),O=n,j=p["".concat(s,".").concat(O)]||p[O]||m[O]||r;return a?i.a.createElement(j,b(b({ref:t},o),{},{components:a})):i.a.createElement(j,b({ref:t},o))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,s=new Array(r);s[0]=O;var b={};for(var l in t)hasOwnProperty.call(t,l)&&(b[l]=t[l]);b.originalType=e,b.mdxType="string"==typeof e?e:n,s[1]=b;for(var o=2;o<r;o++)s[o]=a[o];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);