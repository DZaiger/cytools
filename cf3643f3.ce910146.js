(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var o=n(2),r=n(6),a=(n(0),n(84)),i={id:"tips",title:"Performance Tips"},s={unversionedId:"getting-started/tips",id:"getting-started/tips",isDocsHomePage:!1,title:"Performance Tips",description:"<link",source:"@site/docs/getting-started/tips.md",slug:"/getting-started/tips",permalink:"/docs/getting-started/tips",version:"current",sidebar:"docs",previous:{title:"Tutorial",permalink:"/docs/getting-started/tutorial"},next:{title:"Overview",permalink:"/docs/documentation/"}},c=[{value:"Caching",id:"caching",children:[]}],l={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("link",{rel:"stylesheet",href:"https://cdn.jsdelivr.net/npm/katex@0.11.0/dist/katex.min.css",integrity:"sha384-BdGj8xC2eZkQaxoQ8nSLefg4AV4/AwB3Fj+8SUSo7pnKP6Eoy18liIKTPn9oBYNG",crossOrigin:"anonymous"}),Object(a.b)("h2",{id:"caching"},"Caching"),Object(a.b)("p",null,"CYTools classes cache most of the hard computations so that things don't have to be recomputed if they are needed again. While this gives a significant speedup to most computations, one should also be aware of possible complications."),Object(a.b)("p",null,"The hidden attributes of the classes are never exposed by any function, and they should not be directly accessed unless you know what you are doing. Accidentally modifying one of these hidden attributes may result in following computations being wrong."),Object(a.b)("p",null,"There is also the issue of memory management. If a large number of polytopes or triangulations need to be used, then it is good to make sure that not everything is kept in memory at the same time. For instance, let's look at the following example."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),"import numpy as np\nfrom cytools import Polytope\np = Polytope([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1],[-1,-1,-1,-1]]).dual()\ntriangs = []\nalpha = 0.01\nwhile len(triangs) < 1000:\n    heights = [pt.dot(pt) + alpha*np.random.random() for pt in p.points_not_interior_to_facets()]\n    t = p.triangulate(heights=heights)\n    if t.is_fine():\n        triangs.append(t)\n\nfor t in triangs:\n    cy = t.get_cy()\n    intnums = cy.intersection_numbers()\n    m = cy.mori_cone()\n    # Do some other computations\n")),Object(a.b)("p",null,"In the above example we have a list of 1000 triangulations that we use to construct the corresponding Calabi-Yaus and do some computations. Each Triangulation object caches its corresponding CalabiYau object, which in turn caches its intersection numbers and whatever else we compute. So if our list of triangulations is too big then we might end up running out of memory. We could solve this in two ways."),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"We could use the ",Object(a.b)("inlineCode",{parentName:"li"},"clear_cache")," function that all main classes have to clear the results of any previous computation.")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python",metastring:"{17}","{17}":!0}),"import numpy as np\nfrom cytools import Polytope\np = Polytope([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1],[-1,-1,-1,-1]]).dual()\ntriangs = []\nalpha = 0.01\nwhile len(triangs) < 1000:\n    heights = [pt.dot(pt) + alpha*np.random.random() for pt in p.points_not_interior_to_facets()]\n    t = p.triangulate(heights=heights)\n    if t.is_fine():\n        triangs.append(t)\n\nfor t in triangs:\n    cy = t.get_cy()\n    intnums = cy.intersection_numbers()\n    m = cy.mori_cone()\n    # Do some other computations\n    t.clear_cache()\n")),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"Alternatively, we could rewrite our code so that only one triangulation is kept in memory at a time.")),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-python"}),"import numpy as np\nfrom cytools import Polytope\np = Polytope([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1],[-1,-1,-1,-1]]).dual()\nalpha = 0.01\ncounter = 0\nwhile counter < 1000:\n    heights = [pt.dot(pt) + alpha*np.random.random() for pt in p.points_not_interior_to_facets()]\n    t = p.triangulate(heights=heights)\n    if t.is_fine():\n        counter += 1\n        cy = t.get_cy()\n        intnums = cy.intersection_numbers()\n        m = cy.mori_cone()\n        # Do some other computations\n")))}p.isMDXComponent=!0},84:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,h=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return n?r.a.createElement(h,s(s({ref:t},l),{},{components:n})):r.a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);